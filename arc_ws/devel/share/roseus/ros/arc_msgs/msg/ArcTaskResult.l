;; Auto-generated. Do not edit!


(when (boundp 'arc_msgs::ArcTaskResult)
  (if (not (find-package "ARC_MSGS"))
    (make-package "ARC_MSGS"))
  (shadow 'ArcTaskResult (find-package "ARC_MSGS")))
(unless (find-package "ARC_MSGS::ARCTASKRESULT")
  (make-package "ARC_MSGS::ARCTASKRESULT"))

(in-package "ROS")
;;//! \htmlinclude ArcTaskResult.msg.html


(defclass arc_msgs::ArcTaskResult
  :super ros::object
  :slots (_completed _task_id _final_state ))

(defmethod arc_msgs::ArcTaskResult
  (:init
   (&key
    ((:completed __completed) nil)
    ((:task_id __task_id) 0)
    ((:final_state __final_state) "")
    )
   (send-super :init)
   (setq _completed __completed)
   (setq _task_id (round __task_id))
   (setq _final_state (string __final_state))
   self)
  (:completed
   (&optional __completed)
   (if __completed (setq _completed __completed)) _completed)
  (:task_id
   (&optional __task_id)
   (if __task_id (setq _task_id __task_id)) _task_id)
  (:final_state
   (&optional __final_state)
   (if __final_state (setq _final_state __final_state)) _final_state)
  (:serialization-length
   ()
   (+
    ;; bool _completed
    1
    ;; int32 _task_id
    4
    ;; string _final_state
    4 (length _final_state)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _completed
       (if _completed (write-byte -1 s) (write-byte 0 s))
     ;; int32 _task_id
       (write-long _task_id s)
     ;; string _final_state
       (write-long (length _final_state) s) (princ _final_state s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _completed
     (setq _completed (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; int32 _task_id
     (setq _task_id (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; string _final_state
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _final_state (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get arc_msgs::ArcTaskResult :md5sum-) "1594f18d1516d447ec066331de31ec36")
(setf (get arc_msgs::ArcTaskResult :datatype-) "arc_msgs/ArcTaskResult")
(setf (get arc_msgs::ArcTaskResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
bool completed		#Whether or not the task was completed.
int32 task_id #we need to know the id when tasks is returning, since multiple instances of the same task type may return to same callback in task handler. If we don't know the tasks id, we won't be sure what instance it is, and the callback only receives Result info, which doesn't include the task_id outlined for this actions goal.
string final_state 	#Since tasks are based on a state machine, this can contain the final state that was reached upon completion/termination.

")



(provide :arc_msgs/ArcTaskResult "1594f18d1516d447ec066331de31ec36")


